@model ClassroomSchedulerCore.Models.Booking
@using System.Security.Claims
@{
    ViewData["Title"] = "Create Booking";
}

<div class="row mb-3">
    <div class="col-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="breadcrumb-item"><a asp-controller="Bookings" asp-action="Index">Bookings</a></li>
                <li class="breadcrumb-item active">Create</li>
            </ol>
        </nav>
    </div>
</div>

<h1>Create New Booking</h1>
<p>Reserve a classroom for your scheduled activity.</p>

<div class="row">
    <div class="col-md-8">
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var state in ViewData.ModelState.Values)
                    {
                        foreach (var error in state.Errors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    }
                </ul>
            </div>
        }

        <form asp-action="Create" method="post">
            <input type="hidden" asp-for="UserId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
            
            <div class="form-group mb-3">
                <label asp-for="RoomId" class="control-label">Room</label>
                <select asp-for="RoomId" class="form-select">
                    <option value="">-- Select Room --</option>
                    @foreach (var room in ViewBag.Rooms)
                    {
                        <option value="@room.Id">@room.Name</option>
                    }
                </select>
                <span asp-validation-for="RoomId" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="Title" class="control-label">Booking Title</label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="StartTime" class="control-label">Start Date/Time</label>
                        <input asp-for="StartTime" class="form-control" type="datetime-local" />
                        <span asp-validation-for="StartTime" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="EndTime" class="control-label">End Date/Time</label>
                        <input asp-for="EndTime" class="form-control" type="datetime-local" />
                        <span asp-validation-for="EndTime" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="Description" class="control-label">Description</label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="Status" class="control-label">Booking Status</label>
                <select asp-for="Status" class="form-select" id="statusSelect">
                    <option value="1" selected>Reserved</option>
                    @if (User.IsInRole("Admin"))
                    {
                        <option value="0">Available</option>
                        <option value="2">Emergency</option>
                    }
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            
            @if (User.IsInRole("Admin") || User.IsInRole("Faculty"))
            {
                <div class="form-check mb-3">
                    <input asp-for="IsEmergency" class="form-check-input" id="isEmergencyCheckbox" />
                    <label asp-for="IsEmergency" class="form-check-label">Emergency Booking</label>
                    <div class="text-danger">Emergency bookings will override existing reservations. Use this option only for urgent situations.</div>
                </div>
            }
            
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
    
    <div class="col-md-4">
        <div class="card mb-3">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Booking Guidelines</h5>
            </div>
            <div class="card-body">
                <dl>
                    <dt>Title:</dt>
                    <dd>Provide a clear, descriptive title for your booking.</dd>
                    
                    <dt>Time:</dt>
                    <dd>Ensure the booking start time is before the end time.</dd>
                    
                    <dt>Status:</dt>
                    <dd>Regular bookings should use "Reserved" status.</dd>
                    
                    <dt>Emergency:</dt>
                    <dd>Only mark as emergency for critical situations requiring immediate room access.</dd>
                </dl>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">Status Legend</h5>
            </div>
            <div class="card-body">
                <div class="mb-2">
                    <div class="d-flex align-items-center">
                        <div class="bg-success me-2" style="width: 20px; height: 20px;"></div>
                        <strong>Available</strong>
                    </div>
                    <small class="text-muted">Indicates the room is available for standard booking.</small>
                </div>
                <div class="mb-2">
                    <div class="d-flex align-items-center">
                        <div class="bg-warning me-2" style="width: 20px; height: 20px;"></div>
                        <strong>Reserved</strong>
                    </div>
                    <small class="text-muted">Standard reservation that can be overridden by emergency bookings.</small>
                </div>
                <div>
                    <div class="d-flex align-items-center">
                        <div class="bg-danger me-2" style="width: 20px; height: 20px;"></div>
                        <strong>Emergency</strong>
                    </div>
                    <small class="text-muted">High-priority booking that overrides existing reservations.</small>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(function() {
            // Handle emergency checkbox
            $('#isEmergencyCheckbox').change(function() {
                if ($(this).is(':checked')) {
                    $('#statusSelect').val('2'); // Set to Emergency
                } else {
                    $('#statusSelect').val('1'); // Set to Reserved
                }
            });
            
            // Handle status dropdown
            $('#statusSelect').change(function() {
                if ($(this).val() === '2') { // Emergency
                    $('#isEmergencyCheckbox').prop('checked', true);
                } else {
                    $('#isEmergencyCheckbox').prop('checked', false);
                }
            });
        });
    </script>
}
